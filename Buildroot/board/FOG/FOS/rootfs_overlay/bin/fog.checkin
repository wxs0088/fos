#!/bin/bash
. /usr/share/fog/lib/funcs.sh
RUN_CHKDSK=""
HOSTNAME_EARLY=0
OS_ID_WIN7=5
OS_ID_WIN8=6
for arg in $(cat /proc/cmdline | tr -d \\0); do
    case $arg in
        initsh)
            ash -i
            ;;
        nombr)
            nombr=1
            ;;
        *)
            [[ $imgPartitionType != all && $imgPartitionType != mbr ]] && nombr=1
            ;;
    esac
done
clearScreen
displayBanner
osname=""
mbrfile=""
macWinSafe=$(echo $mac|sed 's/://g')
sockets=$(grep "physical id" /proc/cpuinfo|sort -u|wc -l)
arch=$(uname -m)
[[ $chkdsk -eq 1 ]] && RUN_CHKDSK="-x"
[[ $hostearly -eq 1 ]] && HOSTNAME_EARLY=1
case $mc in
    yes)
        method="UDPCAST"
        ;;
    bt)
        method="Torrent-CAST"
        ;;
    *)
        method="NFS"
        ;;
esac
debugPause
verifyNetworkConnection
msg="Checking Operating System"
dots $msg
[[ -z $deployed ]] && determineOS "$osid"
msg_val=$osname
echo "$msg_val"
callBackLog $msg_val $msg
msg="Checking CPU Cores"
dots $msg
cores=$(nproc)
msg_val=$cores
echo "$msg_val"
callBackLog $msg_val $msg
msg="Send method"
msg_val=$method
dots $msg
echo "$msg_val"
callBackLog $msg_val $msg
blGo=0
nfsServerName=""
checkin() {
    local poststring="$1"
    local php_post="$2"
    msg="Attempting to check in"
    dots $msg
    local count=0
    local res=""
    local waittime=0
    while [[ $res != "##@GO" ]]; do
        res=$(curl -Lks --data "$poststring" ${web}service/$php_post 2>/dev/null)
        if [[ $res != "##@GO" ]]; then
            local msg_val="Failed"
            echo "$msg_val"
            debugPause
            echo -n " * $res (In line for "
            sec2string "$waittime"
            echo ")"
            let waittime+=5
            usleep 5000000
            dots "Attempting to check in"
        fi
    done
    local msg_val="Done"
    echo "$msg_val"
    callBackLog $msg_val $msg
    debugPause
    directive="${res:3}"
    if [[ $directive != GO ]]; then
        tmpStorageIp=$(echo $queueinfo|cut -d'@' -f2 2>/dev/null)
        tmpStorage=$(echo $queueinfo|cut -d'@' -f3 2>/dev/null)
        tmpName=$(echo $queueinfo|cut -d'@' -f4 2>/dev/null)
        [[ -z $tmpStorage || -z $tmpStorageIp ]] && handleError "Error determining storage server! ($0)\n   Args Passed: $*"
        storage="$tmpStorage"
        storageip="$tmpStorageIp"
        nfsServerName="$tmpName"
        msg="Using Storage Node"
        dots $msg
        msg_val=$nfsServerName
        echo "$msg_val"
        callBackLog $msg_val $msg
        debugPause
    fi
}
case $mc in
    [Yy][Ee][Ss])
        php_post="mc_checkin.php"
        ;;
    *)
        php_post="Pre_Stage1.php"
        ;;
esac
sysuuid=$(dmidecode -s system-uuid)
sysuuid=${sysuuid,,}
case $mode in
    clamav)
        poststring="sysuuid=${sysuuid}&mac=$mac&avmode=$avmode"
        ;;
    ""|*)
        poststring="sysuuid=${sysuuid}&mac=$mac&type=$type"
        ;;
esac
[[ ! $capone -eq 1 ]] && checkin "$poststring" "$php_post"
