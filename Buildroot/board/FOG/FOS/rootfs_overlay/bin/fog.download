#!/bin/bash
. /usr/share/fog/lib/funcs.sh
. /bin/fog.checkin
. /bin/fog.mount
. /bin/fog.checkmount
. /bin/fog.checkimgvar
hd=""
disks=""
disk=""
parts=""
part=""
imagePath="/images/$img"
origmac=$mac
mac=$(getMACAddresses | base64)
. /bin/fog.inventory "true"
mac="$origmac"
origmac=""
layPartSize="-1s"
fog.statusreporter "$mac" "$web" & disown
statusReporter="$!"
fixed_size_partitions=""
echo " * Using Image: $img"
msg="使用镜像: $img"
msg_val="T"
callBackLog $msg_val $msg
preparePartitions() {
    echo " * Preparing Partition layout"
    msg="准备分区布局"
    msg_val="T"
    callBackLog $msg_val $msg
    case $imgType in
        [Nn])
            case $osid in
                4|50|51)
                    [[ ! -d $imagePath ]] && handleError "Unable to locate image store ($0)\n   Args Passed: $*"
                    prepareResizeDownloadPartitions "$hd" 1 "$imagePath" "$osid" "$imgPartitionType"
                    ;;
                [1-2])
                    [[ ! -f $imagePath && ! -f $imagePath/$img && ! -d $imagePath ]] && handleError "Unable to locate image store ($0)\n   Args Passed: $*"
                    [[ -d $imagePath && -f $imagePath/$img ]] && imagePath="$imagePath/$img"
                    if [[ -d $imagePath ]]; then
                        prepareResizeDownloadPartitions "$hd" 1 "$imagePath" "$osid" "$imgPartitionType"
                    else
                        startsector="63s"
                        restorePartitionTablesAndBootLoaders "$hd" 1 "$imagePath" "$osid" "$imgPartitionType"
                        msg_en="Removing partition"
                        msg="移除分区"
                        dots $msg_en
                        parted -s $hd rm 1 >/dev/null 2>&1
                        if [[ ! $? -eq 0 ]]; then
                            msg_val="Failed"
                            echo "$msg_val"
                            callBackLog $msg_val $msg
                            debugPause
                            handleError "Fatal Error: Could not remove old partition ($0)\n   Args Passed: $*"
                        fi
                        msg_val="Done"
                        echo "$msg_val"
                        callBackLog $msg_val $msg
                        debugPause
                        echo " * Attempting to expand/fill partitions"
                        msg="尝试扩展/填充分区"
                        msg_val="T"
                        callBackLog $msg_val $msg
                        msg_en="Recreating partition"
                        msg="重新创建分区"
                        dots $msg_en
                        parted -s $hd mkpart primary ntfs 63s -- $layPartSize >/dev/null 2>&1
                        if [[ ! $? -eq 0 ]]; then
                            msg_val="Failed"
                            echo "$msg_val"
                            callBackLog $msg_val $msg
                            debugPause
                            handleError "Could not create partition to fill disk ($0)\n   Args Passed: $*"
                        fi
                        msg_val="Done"
                        echo "$msg_val"
                        callBackLog $msg_val $msg
                        debugPause
                        msg_en="Setting boot partition"
                        msg="设置启动分区"
                        dots $msg_en
                        parted -s $hd set 1 boot on >/dev/null 2>&1
                        if [[ ! $? -eq 0 ]]; then
                            msg_val="Failed"
                            echo "$msg_val"
                            callBackLog $msg_val $msg
                            debugPause
                            handleError "Fatal Error: Could not make partition bootable ($0)\n   Args Passed: $*"
                        fi
                        runPartprobe "$hd"
                        msg_val="Done"
                        echo "$msg_val"
                        callBackLog $msg_val $msg
                        debugPause
                        getPartitions "$hd"
                        for part in $parts; do
                            [[ -e $part ]] && break
                        done
                    fi
                    ;;
                [5-7]|9)
                    [[ ! -d $imagePath && ! -f $imagePath/sys.img.000 ]] && handleError "Unable to locate image store ($0)\n   Args Passed: $*"
                    sfdiskOriginalPartitionFileName "$imagePath" "1"
                    sfdiskLegacyOriginalPartitionFileName "$imagePath" "1"
                    sfdiskfilename="$sfdiskoriginalpartitionfilename"
                    [[ ! -r $sfdiskfilename ]] && sfdiskfilename="$sfdisklegacyoriginalpartitionfilename"
                    if [[ ! -f $imagePath/sys.img.000 || -f $sfdiskfilename ]]; then
                        prepareResizeDownloadPartitions "$hd" 1 "$imagePath" "$osid" "$imgPartitionType"
                    else
                        echo " * Using legacy style partition setup"
                        msg="使用旧式分区设置"
                        msg_val="T"
                        callBackLog $msg_val $msg
                        win7partcnt=1
                        msg_en="Windows Boot Partition Exists"
                        msg="Windows 启动分区存在"
                        dots $msg_en
                        if [[ ! -f $imagePath/gpt.bak && ! -f $imagePath/rec1.img.000 && ! -f $imagePath/rec.img.000 ]]; then
                                msg_val="No"
                                echo "$msg_val"
                                callBackLog $msg_val $msg
                        else
                            msg_val="Yes"
                            echo "$msg_val"
                            callBackLog $msg_val $msg
                            [[ -f $imagePath/rec.img.000 ]] && win7partcnt=2
                            [[ -f $imagePath/rec.img.001 || -f $imagePath/gpt.bak ]] && win7partcnt=3
                        fi
                        debugPause
                        echo " * Attempting to expand/fill partitions"
                        msg="尝试扩展/填充分区"
                        msg_val="T"
                        callBackLog $msg_val $msg
                        do_fill=0
                        fillDiskWithPartitionsIsOK "$hd" "$imagePath" 1
                        case $do_fill in
                            1)
                                fillDiskWithPartitions "$hd" "$imagePath" 1
                                ;;
                            *)
                                startsector="2048s"
                                restorePartitionTablesAndBootLoaders "$hd" 1 "$imagePath" "$osid" "$imgPartitionType"
                                case $win7partcnt in
                                    1)
                                        msg_en="Removing partition"
                                        msg="移除分区"
                                        dots $msg_en
                                        parted -s $hd rm 1 >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not remove old partition ($0)\n   Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        debugPause
                                        msg_en="Creating main partition"
                                        msg="创建主分区"
                                        dots $msg_en
                                        parted -s $hd mkpart primary ntfs $startsector -- $layPartSize >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not recreate first partition ($0)\n   Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        debugPause
                                        msg_en="Setting boot partition"
                                        msg="设置启动分区"
                                        dots $msg_en
                                        parted -s $hd set 1 boot on >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not make partition bootable ($0)\n   Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        ;;
                                    2)
                                        msg_en="Removing main partition"
                                        msg="移除主分区"
                                        dots $msg_en
                                        parted -s $hd rm 1 >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not remove old main partition ($0)\n    Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        debugPause
                                        msg_en="Recreating recovery partition"
                                        msg="重新创建恢复分区"
                                        dots $msg_en
                                        parted -s $hd mkpart primary ntfs $startsector 206847s >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not create recovery partition ($0)\n    Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        debugPause
                                        msg_en="Recreating main partition"
                                        msg="重新创建主分区"
                                        dots $msg_en
                                        parted -s $hd mkpart primary ntfs $defaultpart2start -- $layPartSize >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not recreate main partition ($0)\n   Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        debugPause
                                        msg_en="Setting boot partition"
                                        msg="设置启动分区"
                                        dots $msg_en
                                        parted -s $hd set 1 boot on >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not make partition bootable ($0)\nArgsPassed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        ;;
                                    3)
                                        msg_en="Removing partition data"
                                        msg="删除分区数据"
                                        dots $msg_en
                                        sgdisk -Z $hd >/dev/null 2>&1
                                        sgdisk -gl $imagePath/gpt.bak $hd >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not recreate partitions ($0)\n   Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        debugPause
                                        msg_en="Recreating sized out partitions"
                                        msg="重新创建尺寸过大的分区"
                                        dots $msg_en
                                        sgdisk -x 3:$(sgdisk -E $hd) $hd >/dev/null 2>&1
                                        if [[ ! $? -eq 0 ]]; then
                                            msg_val="Failed"
                                            echo "$msg_val"
                                            callBackLog $msg_val $msg
                                            debugPause
                                            handleError "Fatal Error: Could not resize partitions ($0)\n   Args Passed: $*"
                                        fi
                                        msg_val="Done"
                                        echo "$msg_val"
                                        callBackLog $msg_val $msg
                                        ;;
                                esac
                                ;;
                        esac
                        debugPause
                        runPartprobe "$hd"
                        msg_en="Setting up partition variables"
                        msg="设置分区变量"
                        dots $msg_en
                        getPartitions "$hd"
                        restoreparts=""
                        part_number=0
                        for part in $parts; do
                            getPartitionNumber "$part"
                            [[ $part_number -le $win7partcnt ]] && restoreparts="$restoreparts $part"
                        done
                        msg_val="Done"
                        echo "$msg_val"
                        callBackLog $msg_val $msg
                        debugPause
                    fi
                    ;;
            esac
            ;;
        mps)
            [[ ! -d $imagePath ]] && handleError "Unable to locate image store ($0)\n   Args Passed: $*"
            restorePartitionTablesAndBootLoaders "$hd" 1 "$imagePath" "$osid" "$imgPartitionType"
            runPartprobe "$hd"
            gptcheck="$global_gptcheck"
            ;;
        mpa)
            [[ ! -d $imagePath ]] && handleError "Unable to locate image store ($0)\n   Args Passed: $*"
            disk_number=1
            for disk in $disks; do
                restorePartitionTablesAndBootLoaders "$disk" "$disk_number" "$imagePath" "$osid" "$imgPartitionType"
                runPartprobe "$disk"
                gptcheck="$global_gptcheck"
                let disk_number+=1
            done
            ;;
    esac
}
putDataBack() {
    runPartprobe "$hd"
    getPartitions "$hd"
    [[ -z $parts ]] && echo -e " * Seems like you are trying to restore to an empty disk. Be aware this will most probably cause trouble.\n"
    echo "   +--------------------------------+"
    echo "   |   Attempting to deploy image   |"
    echo "   +--------------------------------+"
    [[ $imgFormat -eq 1 || $imgLegacy -eq 1 ]] && echo "   |         Using Partimage        |" || echo "   |         Using Partclone        |"
    echo "   +--------------------------------+"
    [[ $mc == yes ]] && usleep 10000000 || usleep 3000000
    case $imgType in
        dd)
            restorePartition "$hd" 1 "$imagePath/${img}*" "$mc"
            ;;
        n|mps|mpa)
            [[ $imgType == +(n|mps) ]] && disks="$hd"
            case $osid in
                [1-2])
                    [[ ! -f $imagePath && ! -d $imagePath ]] && handleError "Fatal Error: Could not locate file ($0)\n   Args Passed: $*"
                    ;;
                [5-7]|9)
                    [[ ! -d $imagePath && ! -f $imagePath/sys.img.000 ]] && handleError "Fatal Error: Could not locate file ($0)\n   Args Passed: $*"
                    ;;
                4|50|51)
                    [[ ! -d $imagePath ]] && handleError "Fatal Error: could not locate file ($0)\n   Args Passed: $*"
                    ;;
            esac
            performRestore "$disks" "$imagePath" "$imgPartitionType" "$mc"
            ;;
    esac
}
findHDDInfo
[[ $nombr -eq 1 ]] && dotTitle "跳过分区布局(单个分区恢复)" " * Skipping partition layout (Single Partition restore)" || preparePartitions
[[ $imgPartitionType != mbr ]] && putDataBack || dotTitle "跳过分区恢复(仅限MBR)" " * Skipping partition restore (MBR Only)"
completeTasking
