#!/bin/bash
. /usr/share/fog/lib/funcs.sh
for arg in $(cat /proc/cmdline | tr -d \\0); do
    case $arg in
        initsh)
            ash -i
            ;;
        *)
            ;;
    esac
done
export capone=1
clearScreen
displayBanner
echo " * Starting Capone"
debugPause
dots "Using Key Value:"
dmivalue=$(dmidecode -s $dmi)
echo "$dmivalue"
debugPause
dmi64=$(echo -n $dmivalue | base64)
dots "Looking for images"
count=0
imgret=""
while [[ -z $imgret ]]; do
    imgret=$(curl -Lks --data "action=imagelookup&key=${dmi64}" ${web}service/capone.php 2>/dev/null)
    [[ -n $imgret ]] && continue
    if [[ $count -ge 10 ]]; then
        echo "Failed"
        debugPause
        handleError "Count not find an Image definition ($0)\n   Args Passed: $*"
    fi
    let count+=1
    usleep 5000000
done
echo "Done"
debugPause
cnt=0
linedecode=""
osname=""
mbrfile=""
defaultpart2start=""
img=""
osid=""
imgType=""
imgPartitionType=""
imgFormat=""
for line in $imgret; do
    linedecode=$(echo $line | base64 -d)
    [[ -z $linedecode ]] && handleError "No image definition was found for $dmivalue ($0)\n   Args Passed: $*"
    let cnt+=1
    awk_returned_vars=$(echo $linedecode | awk -F'|' "{printf(\"%s %s %s %s %s %s %s\",\$1,\$2,\$3,\$4,\$5,\$6,\$7)}")
    read img osid imgType imgPartitionType imgFormat storage storageip <<< $awk_returned_vars
    determineOS "$osid"
    echo -n " ID $cnt) "
    echo -n " OS: $osname"
    echo -n " Image: "
    echo $img
    echo -n " Partition: "
    echo $imgPartitionType
    echo -n " Format : "
    case $imgFormat in
        1)
            echo "Partimage"
            ;;
        2)
            echo "Partclone split files"
            ;;
        *)
            echo "Partclone"
            ;;
    esac
done
case $cnt in
    0)
        handleError "No image definition was found for $dmivalue ($0)\n   Args Passed: $*"
        ;;
    1)
        ;;
    *)
        imgchoice=""
        while [[ -z $imgchoice ]]; do
            echo -n " Multiple images found, please select an image #: "
            read imgchoice
        done
        cnt=0
        for line in $imgret; do
            linedecode=$(echo $line | base64 -d)
            let cnt+=1
            if [[ $cnt -eq $imgchoice ]]; then
                awk_returned_vars=$(echo $linedecode | awk -F'|' "{printf(\"%s %s %s %s %s %s %s\",\$1,\$2,\$3,\$4,\$5,\$6,\$7)}")
                read img osid imgType imgPartitionType imgFormat storage storageip <<< $awk_returned_vars
                determineOS "$osid"
                break
            fi
        done
        ;;
esac
echo " * Setting up environment to deploy image"
export type="down"
export mac=$(getMACAddresses)
export img
export osid
export imgType
export imgPartitionType
export imgFormat
export storage
export storageip
debugPause
clear
fog
